Step 1: Create a "resources" folder inside the "webapp/WEB-INF" directory

Step 2: Create folders to hold different types of files (you can name them anything: however standards should be followed) inside resources folder such as:
> css
> js 
> images

Step 3: Place respectives files in css, js, images folder. Here we put
> style.css inside css
> script.js inside js
> img_1.jpg inside images

Step 4: We need to use certain configurations inside our spring config file. Include
a. namespace
xmlns:mvc="http://www.springframework.org/schema/mvc"

and

http://www.springframework.org/schema/mvc

http://www.springframework.org/schema/mvc/spring-mvc.xsd 

b. Tag

<mvc:resources mapping="/resources/**" location="WEB-INF/resources/" />

> the location attribute specifies the location of resources folder relative to webapp directory, here resources is inside WEB-INF.

> mapping attribute specifies the url we will use to refer to resources directory

c. Annotation enabler
<mvc:annotation-driven/>

Step 5: Use TagLib library in jsp file to include these resources
a. Include dependencies:

<dependency>
	<groupId>javax.servlet.jsp.jstl</groupId>
	<artifactId>jstl-api</artifactId>
	<version>1.2</version>
</dependency>
<dependency>
	<groupId>taglibs</groupId>
	<artifactId>standard</artifactId>
	<version>1.1.2</version>
</dependency>

b. Include the following tag in the page where we wish to include the resources:
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

Step 6: Use the following lines to include static resources:
<link href="<c:url value='/resources/css/style.css'/>" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="<c:url value='/resources/js/script.js'/>"></script>
<img src='<c:url value="/resources/images/pic_1.jpg"/>' alt="my image"/>